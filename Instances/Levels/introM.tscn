[gd_scene load_steps=9 format=3 uid="uid://b6rxo6w87y20g"]

[ext_resource type="PackedScene" uid="uid://c1xol3wby2j0k" path="res://Instances/Prefabs/level_bg.tscn" id="1_gfuq2"]
[ext_resource type="PackedScene" uid="uid://cqw1qs0bt5s4o" path="res://Instances/Prefabs/Player.tscn" id="2_jg6l5"]
[ext_resource type="PackedScene" uid="uid://dwavjbyw0v12l" path="res://Instances/Prefabs/tile_map.tscn" id="3_cbtro"]
[ext_resource type="AudioStream" uid="uid://b1yijt0u2dcnh" path="res://Assets/Audio/BGM/SMW/WorldClear.mp3" id="4_fo1vt"]
[ext_resource type="PackedScene" uid="uid://cp5jp56rp76so" path="res://Instances/Prefabs/Items/yoshi_berry.tscn" id="5_btnin"]

[sub_resource type="GDScript" id="GDScript_t42pd"]
script/source = "extends Level

func spawn() -> void:
	GameManager.can_pause = false

func _on_timer_timeout() -> void:
	GameManager.show_message(preload(\"res://Assets/Sprites/UI/Messages/OpeningMakers.png\"), 14)
	await GameManager.message_closed
	TransitionManager.transition_to_map(GameManager.current_map_path, self)

func _exit_tree() -> void:
	GameManager.can_pause = true
"

[sub_resource type="Shader" id="Shader_1xk88"]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;


uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_tlr60"]
resource_local_to_scene = true
shader = SubResource("Shader_1xk88")
shader_parameter/strength = 0.0
shader_parameter/speed = 0.5
shader_parameter/angle = 36.404

[node name="Level" type="Node"]
script = SubResource("GDScript_t42pd")
lock_camera = true

[node name="LevelBG" parent="." instance=ExtResource("1_gfuq2")]
sky_colour = Color(0.972549, 0.878431, 0.690196, 1)

[node name="Player" parent="." instance=ExtResource("2_jg6l5")]
material = SubResource("ShaderMaterial_tlr60")
position = Vector2(120, 0)

[node name="TileMap" parent="." instance=ExtResource("3_cbtro")]
layer_0/tile_data = PackedInt32Array(65532, 655360, 0, 65533, 655360, 0, 65534, 655360, 0, 65535, 655360, 0, 0, 655360, 0, 1, 655360, 0, 2, 655360, 0, 3, 655360, 0, 4, 655360, 0, 5, 655360, 0, 6, 655360, 0, 7, 655360, 0, 8, 655360, 0, 9, 655360, 0, 10, 655360, 0, 11, 655360, 0, 12, 655360, 0, 13, 655360, 0, 14, 655360, 0, 15, 655360, 0, 16, 655360, 0, 17, 655360, 0, 18, 655360, 0, 19, 655360, 0, 20, 655360, 0, 21, 655360, 0, 22, 655360, 0, 23, 655360, 0, 24, 655360, 0, 25, 655360, 0, 131068, 589824, 2, 131069, 589824, 2, 131070, 589824, 2, 131071, 589824, 2, 65536, 589824, 2, 65537, 589824, 2, 65538, 589824, 2, 65539, 589824, 2, 65540, 589824, 2, 65541, 589824, 2, 65542, 589824, 2, 65543, 589824, 2, 65544, 589824, 2, 65545, 589824, 2, 65546, 589824, 2, 65547, 589824, 2, 65548, 589824, 2, 65549, 589824, 2, 65550, 589824, 2, 65551, 589824, 2, 65552, 589824, 2, 65553, 589824, 2, 65554, 589824, 2, 65555, 589824, 2, 65556, 589824, 2, 65557, 589824, 2, 65558, 589824, 2, 65559, 589824, 2, 65560, 589824, 2, 65561, 589824, 2, 196604, 589824, 2, 196605, 589824, 2, 196606, 589824, 2, 196607, 589824, 2, 131072, 589824, 2, 131073, 589824, 2, 131074, 589824, 2, 131075, 589824, 2, 131076, 589824, 2, 131077, 589824, 2, 131078, 589824, 2, 131079, 589824, 2, 131080, 589824, 2, 131081, 589824, 2, 131082, 589824, 2, 131083, 589824, 2, 131084, 589824, 2, 131085, 589824, 2, 131086, 589824, 2, 131087, 589824, 2, 131088, 589824, 2, 131089, 589824, 2, 131090, 589824, 2, 131091, 589824, 2, 131092, 589824, 2, 131093, 589824, 2, 131094, 589824, 2, 131095, 589824, 2, 131096, 589824, 2, 131097, 589824, 2, 65531, 524288, 0, 131067, 524288, 1, 196603, 524288, 1, 262139, 524288, 3, 262140, 589824, 3, 262141, 589824, 3, 262142, 589824, 3, 262143, 589824, 3, 196608, 589824, 3, 196609, 589824, 3, 196610, 589824, 3, 196611, 589824, 3, 196612, 589824, 3, 196613, 589824, 3, 196614, 589824, 3, 196615, 589824, 3, 196616, 589824, 3, 196617, 589824, 3, 196618, 589824, 3, 196619, 589824, 3, 196620, 589824, 3, 196621, 589824, 3, 196622, 589824, 3, 196623, 589824, 3, 196624, 589824, 3, 196625, 589824, 3, 196626, 589824, 3, 196627, 589824, 3, 196628, 589824, 3, 196629, 589824, 3, 196630, 589824, 3, 196631, 589824, 3, 196632, 589824, 3, 196633, 589824, 3, 26, 720896, 0, 65562, 720896, 2, 131098, 720896, 2, 196634, 720896, 3, -65518, 65537, 1, -131054, 65537, 1, -196590, 65537, 1, -262126, 65537, 1, -327662, 65537, 0, -327661, 131073, 0, -327660, 131073, 0, -327659, 131073, 0, -327658, 196609, 0, -262122, 196609, 1, -196586, 196609, 1, -131050, 196609, 1, -65514, 196609, 1, -262125, 131073, 1, -262124, 131073, 1, -262123, 131073, 1, -196587, 131073, 1, -196588, 131073, 1, -196589, 131073, 1, -131053, 131073, 1, -131052, 131073, 1, -65516, 131073, 1, -65517, 131073, 1, -65515, 131073, 1, -131051, 131073, 1, -524283, 65537, 0, -458747, 65537, 1, -393211, 65537, 1, -327675, 65537, 1, -262139, 65537, 1, -196603, 65537, 1, -131067, 65537, 1, -65531, 65537, 1, -524280, 196609, 0, -393208, 196609, 1, -327672, 196609, 1, -262136, 196609, 1, -196600, 196609, 1, -131064, 196609, 1, -65528, 196609, 1, -458744, 196609, 1, -524281, 131073, 0, -458745, 131073, 1, -524282, 131073, 0, -458746, 131073, 1, -393209, 131073, 1, -327673, 131073, 1, -262137, 131073, 1, -262138, 131073, 1, -196602, 131073, 1, -131066, 131073, 1, -65530, 131073, 1, -65529, 131073, 1, -131065, 131073, 1, -196601, 131073, 1, -327674, 131073, 1, -393210, 131073, 1)
layer_1/tile_data = PackedInt32Array(-65535, 196617, 4, -196606, 262153, 2, -131070, 262153, 3, -65534, 262153, 4, -262141, 327689, 1, -196605, 327689, 2, -131069, 327689, 3, -65533, 327689, 4, -262140, 393225, 1, -196604, 393225, 2, -131068, 393225, 3, -65532, 393225, 4, -196603, 458761, 2, -131067, 458761, 3, -65531, 458761, 4, -131066, 524297, 3, -65530, 524297, 4, -65526, 589833, 4, -131061, 655369, 3, -65525, 655369, 4, -262132, 720905, 1, -196596, 720905, 2, -131060, 720905, 3, -65524, 720905, 4, -327667, 786441, 0, -262131, 786441, 1, -196595, 786441, 2, -131059, 786441, 3, -65523, 786441, 4, -327666, 851977, 0, -262130, 851977, 1, -196594, 851977, 2, -131058, 851977, 3, -65522, 851977, 4, -327665, 917513, 0, -262129, 917513, 1, -196593, 917513, 2, -131057, 917513, 3, -65521, 917513, 4, -262128, 983049, 1, -196592, 983049, 2, -131056, 983049, 3, -65520, 983049, 4, -196591, 1048585, 2, -131055, 1048585, 3, -65519, 1048585, 4, -65518, 1114121, 4)

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
process_mode = 3
stream = ExtResource("4_fo1vt")
autoplay = true
bus = &"SFX"

[node name="YoshiBerry" parent="." instance=ExtResource("5_btnin")]
position = Vector2(56, -24)

[node name="YoshiBerry2" parent="." instance=ExtResource("5_btnin")]
position = Vector2(200, -8)

[node name="YoshiBerry3" parent="." instance=ExtResource("5_btnin")]
position = Vector2(232, -40)

[node name="Timer" type="Timer" parent="."]
one_shot = true
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
